/* Written by Walter Lohmueller
*/
//////SENSOR LIBRARIES///////////
#include <SPI.h>

#include <Adafruit_LSM6DS33.h>

// For SPI mode, we need a CS pin
#define LSM_CS 10
// For software-SPI mode we need SCK/MOSI/MISO pins
#define LSM_SCK 13
#define LSM_MISO 12
#define LSM_MOSI 11
#include <math.h>
Adafruit_LSM6DS33 lsm6ds33;

////////STATE ESTIMATE VARIABLES/////////
#include <math.h>

//BARAOMETER//
float SD_pad_close = 0;
float alt_speed = 0;
float alt_past = 0;
float alt_present = 0;
float altitude_previous = 0;
float temperature, pressure, altitude;  // Create the temperature, pressure and altitude variables
float altitudeoffset = 0;               //set the offset variable to get altitude above ground level
float Altitude_true = 0;                //altitude above the ground
float altfilt = 0;                      // variable to filter altitude data
float apogee = -1;
float accel_altitude_new = 0;

//IMU//
float accely = 0;
float accelx = 0;
float accelz = 0;
float accelx_old = 0;

float accel_true = 0;

float gyroz = 0;
float gyrox = 0;
float gyroy = 0;

float gyrox_offset;
float gyroy_offset;
float gyroz_offset;

float gyrox_offset1;
float gyroy_offset1;
float gyroz_offset1;

float gyrox_offset2;
float gyroy_offset2;
float gyroz_offset2;

float anglex;
float angley;
float anglez;

float accel_pitch;
float accel_roll;

float anglex_old;
float angley_old;
float anglez_old;


float velocity_offset = 0;
float altitude_offset = 0;
float offset_counter = 1;
float velocity_new = 0;
float velocity_old = 0;
float velocity_change = 0;
float accel_altitude = 0;

float launch_count = 0;
/////TIMEKEEPER//////////
float millisoffset = 0;  // variable to offset millis
float Time;              // set up time at start of loop
float time_actual;       //set up the difference in time, also the actual time
float time_offset;       // set up the time offset
float time_old = 0;
float time_new = 0;
float Time_step = 0;
///////////////////GUIDENCE NAVIGATION CONTROL///////////////////////
#include <Servo.h>
Servo Servo1;  //declare two servos
Servo Servo2;
float stopping_distance = 0;
float speed_alt_const = 0.29;
float SD_close_counter = 1;
float parachute_deploy_counter = 0;
float deploy_error = 0;

Servo roll_servo;  //declare two servos
Servo pitch_servo;
Servo roll_servo1;
Servo pitch_servo1;

float Pitch_servo;
float Roll_servo;

float pitch_error;
float roll_error;

float pitch_target = 0;
float roll_target = 0;

float starting_pitch = 0;
float starting_roll = 0;

float MMOI = 0.00638;
float required_side_forcex = 0;
float required_side_forcey = 0;
float moment_arm = 0.28;
float thrust = 0;
float mass = 0.7;


//-----------------------------------------
//Quaternion Integration variables
//-----------------------------------------
float Quat[5] = {0.0, 1.0, 0.0, 0.0, 0.0};
float gyro_gain = 0.07;
float ddx;
float ddy;
float ddz;
unsigned long lastRotn = 0UL;
unsigned long rotnRate = 10000UL;//100 updates per second

//-----------------------------------------
//gyro & rotation variables
//-----------------------------------------
long dx = 0L;
long dy = 0L;
long dz = 0L;
int pitchX;
int yawY;
long rollZ = 0;
const float degRad = 57.29577951308; //degrees per radian
const float mlnth = 0.000001;
int offVert = 0;


//////////SOFTWARE IN THE LOOP/////////////////
//0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
//float SITL_accelx[] = {0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.16,52.33,34.4,79.67,59.34,69.75,74.93,91.58,80.56,87.25,85.6,70.33,78.55,75.5,48.33,88.23,80.1,63.35,65.4,58.97,53.11,51.13,39.38,47.78,37.85,41.73,38.45,39.44,35.5,52,36,31.65,32.46,18.82,18.15,25.98,28.56,18.38,11.92,7.22,0.79,3.84,8.85,0.19,2.79,-10.8,-8.37,-15.43,-16.52,-14.98,-21.39,-22.47,-19.8,-12.91,-14.54,-22.79,-15.77,-21.12,-19.55,-19.19,-20.48,-20,-16.59,-20.03,-13.98,-19.27,-16.1,-19.3,-20.38,-18.4,-17.45,-17.92,-13.75,-17.28,-17.07,-17.87,-15.9,-14.53,-18.04,-16.4,-16.83,-13.62,-15.78,-15.56,-12.45,-14.02,-11.74,-13.73,-14.82,-14.62,-14.26,-18.81,-12.71,-14.23,-13.41,-13.09,-14.24,-10.98,-13.08,-12.8,-13.3,-13.02,-14.92,-10.92,-9.8,-11.89,-11.39,-11.65,-13.45,-12.25,-11.42,-11.38,-13.14,-12.52,-12.33,-12.69,-13.73,-12.23,-11,-11.56,-12.47,-11.59,-12.52,-11.71,-11.97,-10.67,-10.95,-11.1,-11.97,-13.02,-11.3,-11.21,-11.83,-9.74,-10.55,-11.23,-11.07,-10.89,-9.89,-11.67,-9.52,-10.41,-10.6,-10.84,-10.96,-9.59,-11.44,-11.74,-10.7,-11.35,-10.62,-10.21,-9.82,-9.7,-10.38,-10.43,-9.8,-10.19,-9.99,-10.17,-10.09,-9.85,-10.09,-9.9,-9.96,-9.67,-9.75,-9.77,-10.09,-9.77,-10.18,-9.81,-9.83,-9.89,-9.85,-9.75,-9.49,-9.85,-9.55,-9.54,-9.7,-9.56,-9.89,-8.27,-9.95,-9.59,32.86,-9.44};
//float SITL_accelx[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29,-0.71,10.3,78.68,110.72,22.31,67.13,90.26,102.74,97.62,88.79,95.76,89.62,90.75,95.63,96.56,109.23,100.79,86.76,84.83,91.46,93.13,86.09,97.14,97.89,88.38,84.59,98.52,87.19,92.27,83.43,85.93,82.31,92.75,87.86,93.43,85.72,81.51,83.29,82.81,90.36,63.16,92.42,87.15,80.85,59.57,78.2,85.91,66.06,79.89,82.69,58.19,54.88,66.6,67.08,60.5,55.3,61.86,40.88,44.52,71.05,45.58,51.24,71.72,38.38,19.98,32.24,30.9,13.71,-21.99,-54.07,-71.54,-59.74,-44.7,-65.93,-27.08,-35.24,-50.64,-49.41,-32.12,-31.73,-65.65,-20.26,-31.06,-53.03,-23.03,-10.3,-13.72,-43.93,-19.72,-33.55,-2.15,-26.78,-17.27,-30.2,-26.72,-11.2,-37.74,-8.06,-45.52,-14.49,-34.23,-47.8,-33.99,-38.81,-12.58,-37.11,-19.83,-30.59,-10.6,-6.23,-21.87,-19.75,-35.14,-23.72,-30.47,-22.78,-40.77,-5.49,-29.57,-25.59,-45.25,-24.92,-36.47,-17.24,-34.49,-6.61,-31.02,-20.67,-20.72,-14.87,-7.89,-24.11,-27.32,-16.7,-27.09,-26.89,-21.34,-13.61,-21.23,-15.38,-21.63,-20.25,-19.56,-29.51,-3.03,-22.08,-24.29,-15.23,-28.26,-23.88,-9.6,-21.69,-16.43,-16.54,-20.1,-8.66,-15.52,-14.19,-13.17,-21.23,-3.78,-23.17,-19.22,-29.85,-16.31,-16.38,-20.9,-26.95,-18.94,-20.71,-12.84,-9.22,-12.24,-20.08,-18.03,-20.07,-19.42,-19.16,-16.83,-9.98,-13.87,-9.69,-15.7,-16.69,-11.87,-12.21,-12.56,-16.56,-20.3,-10.3,-13.57,-15.02,-19.04,-20.96,-16.24,-16.17,-16.6,-14.71,-21,-14.77,-17.41,-8.19,-13.85,-17.57,-12.32,-12.56,-11.05,-13.43,-12.63,-10.29,-13.65,-16.44,-7.38,-15.6,-13.79,-17.44,-11.22,-16.06,-12.74,-17.94,-13.1,-11.79,-10.21,-18.61,-10.33,-15.2,-15.56,-17.78,-12.3,-19.04,-13.05,-11.46,-8.93,-15.23,-16.97,-9.23,-13.8,-15.19,-11.42,-10.35,-11.08,-11.77,-15.91,-12.53,-12.99,-10.37,-11.61,-17.81,-11.93,-10.7,-16.88,-10.18,-13.74,-15.42,-13.38,-13.42,-14.11,-11.16,-11.73,-12.77,-13.66,-10.31,-14.75,-12.75,-10.32,-13.79,-9.73,-11.57,-12.66,-12.03,-13.02,-11.76,-11.76,-9.85,-11.8,-10.87,-8.5,-11.06,-14.54,-9.66,-12.23,-11.25,-9.92,-12.91,-10.77,-10.75,-14,-11.77,-11.6,-10.85,-12.35,-11.03,-11.73,-12.11,-11.47,-11.37,-11.64,-10.17,-10.77,-12.01,-13.12,-11.19,-11.1,-10.79,-11.48,-10.75,-11.61,-9.42,-10.5,-10.8,-10.61,-10.66,-10.83,-10.97,-11.67,-10.83};

//float SITL_accelx[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27.689999999999998 , 27.687301164772357 , 27.678464066983388 , 27.66341652039271 , 27.64187827572185 , 27.613555584374694 , 27.582090189782058 , 27.544836277311738 , 27.50560958302046 , 27.45844785299704 , 27.409354310985925 , 27.350883439949236 , 27.278604770181772 , 27.211220794986183 , 27.12314031176104 , 27.038672144494733 , 26.94884356216987 , 26.862483793115572 , 26.759241688769528 , 26.656437321360798 , 26.547314032350357 , 26.446427978722276 , 26.32883145793508 , 26.202299583800915 , 26.077445913717426 , 25.955103909767004 , 25.825684086323605 , 25.678692745914084 , 25.534381328610962 , 25.38764590020378 , 25.245635897405826 , 25.09478281900224 , 24.944161707339354 , 24.772018604602124 , 24.600818296121304 , 24.437881819850936 , 24.254031494953622 , 24.07345723991687 , 23.890855029110902 , 23.707890398175252 , 23.48960627218296 , 23.28612703239049 , 23.102126004106694 , 22.890595082084864 , 22.68907795162857 , 22.48636711623871 , 22.29399998405905 , 22.08533988818761 , 21.876761872963833 , 21.661226651533063 , 21.465819092198814 , 21.257861076074676 , 21.06724935784331 , 20.865847502488236 , 20.654101779648876 , 25.77946931142536 , 25.476677814288756 , 25.178391582719904 , 24.851774396902904 , 24.51342882882158 , 24.18191228058916 , 23.870835599561538 , 23.536302429474816 , 23.217500267271546 , 22.889192360167655 , 22.542650517867507 , 22.241522875951333 , 21.919491029751136 , 21.577781353104356 , 21.26696956760552 , 20.932663592709737 , 20.596866092274837 , 20.277908208920906 , 19.967965481754398 , 19.63143767904237 , 19.169222179530017 , 18.765249760824595 , 18.29165343275959 , 17.978799261529375 , 17.685026528572692 , 17.39722385542988 , 17.105823073341107 , 16.820364856457502 , 16.544996840701167 , 16.237305518054782 , 15.941417421543727 , 15.64961643249996 , 15.356595937856154 , 15.094355961422531 , 14.806769765480935 , 14.531661654408266 , 14.261172256157254 , 13.980434864204492 , 13.708165444433648 , 13.43781422187624 , 13.171975922926306 , 12.91055261498233 , 12.663317494033228 , 12.428347578566113 , 12.195172882333823 , 11.950425818809832 , 11.7008378913377 , 11.474615224526923 , 11.190346044605596 , 10.955651093838094 , 10.72446585931941 , 10.499772794933174 , 10.289719762194801 , 10.06567654196031 , 9.852384596512662 , 9.638172906558031 , 9.447947549727383 , 9.259131510935523 , 9.060916082442768 , 8.863082590185888 , 8.686439255405032 , 8.493364659087709 , 8.302474046943795 , -35.98933183029276 , -35.177888889509 , -34.50301353604133 , -33.79155758309642 , -33.09669905892318 , -32.42255552341504 , -31.746599094834004 , -31.108811611357723 , -30.47434441520808 , -29.876963927321775 , -29.30796241236304 , -28.75385446120015 , -28.229366274273453 , -27.70803475451698 , -27.197400008024537 , -26.69623532697785 , -26.220626568799347 , -25.76373819837692 , -25.317667133952845 , -24.89134301662047 , -24.477880094249002 , -24.08059052738701 , -23.68631196210866 , -23.309884467396873 , -22.932524351879923 , -22.567019334158196 , -22.212703125851462 , -21.87476651413189 , -21.570326866930962 , -21.25732287948452 , -20.952814909789872 , -20.65719097743044 , -20.372306969184315 , -20.096362629946853 , -19.807050246892572 , -19.540590528110364 , -19.216746775718672 , -18.944121959018783 , -18.702816041785617 , -18.41391588356198 , -18.211471284069162 , -17.99659500289701 , -17.7732319034056 , -17.54538684982268 , -17.33363464592864 , -17.153684137843936 , -16.954792620734416 , -16.754659525951073 , -16.569508255404223 , -16.397577625330214 , -16.1727475795945 , -15.992018808992057 , -15.817349350502667 , -15.653055005179478 , -15.489925381017137 , -15.329800586027558 , -15.183064663215518 , -15.03142986651614 , -14.881286456386889 , -14.742658452466737 , -14.604916868865114 , -14.478321315185255 , -14.345944564745917 , -14.213996289183003 , -14.0864513715012 , -13.959760121663003 , -13.840997810226137 , -13.727428389199025 , -13.609756827951045 , -13.495969090633611 , -13.38354748340979 , -13.272675092154682 , -13.171359034278836 , -13.069255210305151 , -12.966920228165499 , -12.869481817066466 , -12.770443687591047 , -12.675143772705775 , -12.586544425740772 , -12.500103987281875 , -12.413568220456838 , -12.331275364456097 , -12.247217988180672 , -12.167031883027356 , -12.08465017199676 , -12.01203178567509 , -11.938461763398792 , -11.872519400810242 , -11.802553344216722 , -11.729361443192664 , -11.658888385823902 , -11.595300486949814 , -11.531548222779374 , -11.46690424405402 , -11.402719769116786 , -11.34586853775678 , -11.286358971494117 , -11.232801883335167 , -11.177419324344635 , -11.120667832636757 , -11.063629350876905 , -11.010768637237197 , -10.961845963100926 , -10.912062460258689 , -10.86453833426448 , -10.81684420217507 , -10.769191318231561 , -10.723739283073407 , -10.683839608910407 , -10.640834536585865 , -10.598059035845779 , -10.55722140499408 , -10.517586030643505 , -10.480174792233264 , -10.432156103376364 , -10.396920748548071 , -10.362062287784047 , -10.329285146108564 , -10.296809088364997 , -10.267688376735842 , -10.2380923940125 , -10.209165800275082 , -10.182205985067144 , -10.155875805103346 , -10.130674187795073 , -10.106333003187151 , -10.083253882714706 , -10.060469116903672 , -10.041307023514555 , -10.021674254112755 , -10.001739326292068 , -9.983266931301456 , -9.966369620663702 , -9.949337899081625 , -9.934770092104749 , -9.921281736097495 , -9.908500553378849 , -9.895449846754264 , -9.884320274716828 , -9.873303892960086 , -9.86311968398432 , -9.854513572984335 , -9.846445110365096 , -9.839154810531786 , -9.832282217883618 , -9.826377404261793 , -9.821315988868843 , -9.817157122424897 , -9.814287484512441 , -9.811929384499425 , -9.810515888507483 , -9.81000162772563 , -9.810419098201208 , -9.811753754358014 , -9.813959208090116 , -9.81680312813815 , -9.820608265560812 , -9.82545164601884 , -9.830986740160785 , -9.837758296048067 , -9.844913086937328 , -9.85287254657478 , -9.86201669316052 , -9.872359518480947 , -9.883681321267169 , -9.894518119755299 , -9.907176685580573 , -9.921189249685456 , -9.938665997575068 , -9.957997115455557 , -9.975238620458377 , -9.993030565676605 , -10.012496715940772 , -10.03147569750837 , -10.052682067183019 , -10.075190507484118 , -10.097938241975521 , -10.128401450645704 , -10.155603332106978 , -10.179989394656797};
//float SITL_accelx[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,52.33,34.4,79.67,59.34,69.75,74.93,91.58,80.56,87.25,85.6,70.33,78.55,75.5,48.33,88.23,80.1,63.35,65.4,58.97,53.11,51.13,39.38,47.78,37.85,41.73,38.45,39.44,35.5,52,36,31.65,32.46,18.82,18.15,25.98,28.56,18.38,11.92,7.22,0.79,3.84,8.85,0.19,2.79,-10.8,-8.37,-15.43,-16.52,-14.98,-21.39,-22.47,-19.8,-12.91,-14.54,-22.79,-15.77,-21.12,-19.55,-19.19,-20.48,-20,-16.59,-20.03,-13.98,-19.27,-16.1,-19.3,-20.38,-18.4,-17.45,-17.92,-13.75,-17.28,-17.07,-17.87,-15.9,-14.53,-18.04,-16.4,-16.83,-13.62,-15.78,-15.56,-12.45,-14.02,-11.74,-13.73,-14.82,-14.62,-14.26,-18.81,-12.71,-14.23,-13.41,-13.09,-14.24,-10.98,-13.08,-12.8,-13.3,-13.02,-14.92,-10.92,-9.8,-11.89,-11.39,-11.65,-13.45,-12.25,-11.42,-11.38,-13.14,-12.52,-12.33,-12.69,-13.73,-12.23,-11,-11.56,-12.47,-11.59,-12.52,-11.71,-11.97,-10.67,-10.95,-11.1,-11.97,-13.02,-11.3,-11.21,-11.83,-9.74,-10.55,-11.23,-11.07,-10.89,-9.89,-11.67,-9.52,-10.41,-10.6,-10.84,-10.96,-9.59,-11.44,-11.74,-10.7,-11.35,-10.62,-10.21,-9.82,-9.7,-10.38,-10.43,-9.8,-10.19,-9.99,-10.17,-10.09,-9.85,-10.09,-9.9,-9.96,-9.67,-9.75,-9.77,-10.09,-9.77,-10.18,-9.81,-9.83,-9.89,-9.85,-9.75,-9.49,-9.85,-9.55,-9.54,-9.7,-9.56,-9.89,-8.27,-9.95,-9.59,32.86,-9.44,-8.45,-20.67,-38.36,-89.4,54.9,57.4,52.98,46.22,38.6,34.09,31.15,29.34,27.79,25.1,20.04,15.03,11.75,9.36,7.39,5.76,12.78,14.05,14.14,10.14,2.99,-3.34,8.22,4.25,-6.85,-26.67,-26.44,-13.37,-3.22,0.05,2.55,4.05,1.5,-1.34,-3.4,-19.57,1.68,-6.63,-8.73,-8.97,-7.43,-5.83,-4.36,-3.04,-4.69,-10.39,-10.52,-9.18,-7.3,-5.96,-8.18,-4.63,-12.85,-18.18,-14.11,-17.75,-14.51,-9.91,-9.51,-9.35,-9.68,-13.38,-2.07,-2.22,-4.2,-10.89,-23.4,-17.54,-18.38,-25.21,-27.72,-24.85,-27.24,-24.38,-20.05,-13.68,-14.15,-16.38,-18.3,-22.13,-27.94,-29.26,-25.43,-24.98,-20.3,-22.13,-23.18,-28.88,-27.89,-30.97,-29.72,-26.72,-28.36,-29.8,-31.21,-28.88,-29.83,-25.16,-25.05,-30.15,-30.41,-30.69,-33.51,-27.99,-21.84,-24.29,-27.51,-29.95,-27.77,-27.2,-26.95,-24.78,-22.55,-21.76,-25.61,-26.12,-23.96,-25.99,-29.22,-28.41,-32.32,-29.21,-31.04,-28.69,-28.12,-26.03,-25.91,-26.85,-32.42,-39.6,-35.73,-29.96,-27.27,-25.81,-28.05,-30.14,-30.47,-32.21,-28.42,-25.63,-26.61,-28.35,-30.73,-31.71,-29.59,-26.74,-25.62,-26.99,-29.09,-30.84,-35.48,-33.49,-33.8,-32.84,-28.46,-31.25,-28.85,-31.12,-30.75,-32.81,-31.29,-27.08,-24.92,-25.63,-28.56,-30.83,-31.32,-29.53,-26.95,-23.35,-21.95,-25.41,-29.7,-31.85,-28.75,-27.8,-27.92,-25.19,-25.38,-26.32,-29.17,-28.5,-29.95,-28.15,-31.81,-28.81,-28.79,-25.88,-24.98,-25.14,-27.94,-30.94,-27.16,-24.91,-22.56,-24.86,-23.87,-26.66,-25.93,-28.15,-27.15,-26.2,-26.1,-27.95,-28.06,-27.42,-27.77,-26.7,-25.19,-25.75,-25.95,-24.95,-26.08,-25.39,-25.19,-23.27,-23.18,-23.57,-23.52,-21.78,-22.34,-21.57,-20.54,-20.23,-21.32,-20.38,-17.79,-15.99,-17.16,-20.67,-22.97,-22.02,-23.76,-20.45,-16.24,-13.97,-19.96,-22.07,-29.84,-23.24,-23.86,-18.43,-18.96,-22.9,-17.38,-17.09,-16.99,-12.53,-11.64,-9.23,-5.63,-4.53,-7.08,-11.06,-16.64,-18.49,-22.75,-22.21,-22.22,-21.64,-21.63,-18.98,-18.32,-13.28,-10.79,-9.61,-10.83,-13.44,-18.52,-24.21,-30.06,-29.74,-27.22,-25.62,-24.74,-25.96,-24.36,-24.15,-23.68,-23.12,-20.67,-16.18,-15.56,-22.06,-25.44,-26.73,-32.35,-29.15,-28.17,-24.49,-21.6,-22.71,-24.66,-30.12,-29.67,-25.41,-24.89,-23.42,-27.39,-21.68,-25.23,-24.29,-24.69,-24.18,-22.92,-23.86,-23.01,-25.3,-24.34,-25.73,-26.85,-25.45,-20.98,-19.02,-15.62,-16.7,-19.85,-23.53,-24.97,-23.98,-28.11,-29.03,-30.92,-27.76,-26.15,-20.54,-18.07,-17.64,-21.78,-27.91,-29.41,-22.25,-23.33,-25.77,-27.25,-27.77,-24.73,-23.37,-21.88,-17.17,-15.89,-19.77,-23.81,-23.68,-25.9,-26.84,-28.38,-27.54,-27.23,-25.14,-22.6,-26.05,-27.47,-33.73,-30.14,-22.79,-22.53,-24.9,-31.6,-32.23,-31.06,-21.81,-19.04,-18.96,-23.02,-28.77,-34.7,-30.62,-23.29,-18.96,-21.89,-27.25,-26.83,-30.73,-25.8,-21.66,-21.26,-22.81,-25.49,-28.41,-30.72,-27.78,-25.08,-24.53,-25.55,-26.81,-28,-26.03,-26.59,-23.6,-20.31,-19.71,-22.11,-25.32,-29.62,-30.97,-29.49,-25.74,-24.48,-25.02,-24.46,-25.55,-24.94,-25.14,-24.15,-24.16,-21.04,-27.47,-24,-26.94,-20.38,-23.95,-18.56,-20.33,-21.68,-17.07,-18.22,-17.24,-21.65,-19.68,-23.98,-22.14,-20.97,-18.13,-16.02,-18.34,-20.09,-22.96,-19.83,-16.21,-17.12,-23.75,-27.62,-28.86,-27.08,-22.92,-18.96,-15.77,-13.38,-10.13,-17.2,-16.32,-20.88,-22.56,-24.43,-23.12,-25.73,-25.92,-22.46,-21.48,-17.38,-15.01,-12.21,-17.28,-23.28,-25.66,-27.18,-25.9,-22.6,-21.13,-20.23,-18.01,-18.66,-21.37,-21.98,-20.11,-19.96,-21.63,-22.96,-22.5,-22.74,-25.15,-23.75,-21.33,-16.83,-16.55,-15.4,-14.36,-18.2,-17.56,-20.95,-18.19,-24,-26.34,-24.59,-25.01,-21.34,-19.65,-17.43,-14.75,-12.15,-16.37,-18.05,-22.01,-22.58,-25.5,-22.31,-22.6,-23.8,-22.14,-24.93,-22.83,-23.35,-20.92,-20.04,-19.4,-18.99,-20.59,-21.05,-19.35,-22.78,-21.94,-26.69,-26,-23.35,-18.89,-21.59,-21.03,-22.22,-21.58,-23.39,-20.65,-16.34,-13.78,-19.01,-16.41,-14.65,-7.67,-12.83,-16.03,-20.67,-18.27,-20.29,-16.43,-19.5,-15.8,-23.35,-20.25,-16.4,-12.22,-7.23,-11.54,-14.32,-20.79,-26.14,-24.3,-28.15,-26.31,-25.88,-21.49,-22.73,-27.43,-26.59,-23.21,-26.6,-28.4,-27.85,-23.04,-20.36,-17.05,-18.66,-20.45,-25.4,-26.83,-27.68,-25.34,-26.39,-28.58,-31.05,-27.18,-28.07,-23.67,-26.29,-28.53,-30.45,-32.48,-31.27,-29.83,-25.72,-25.35,-24.84,-24.44,-24.42,-23.88,-25.85,-26.4,-28.54,-26.54,-25.55,-23.33,-21.17,-20.71,-23.4,-26.33,-23.87,-23.73,-20.09,-21.39,-24.35,-26.26,-24.4,-22,-18.72,-18.62,-19.57,-24.33,-21.72,-27.19,-24.74,-19.21,-19,-18.68,-22.76,-25.32,-23.87,-22.48,-20.3,-16.28,-13.24,-12.75,-15.45,-19.38,-21.19,-22.57,-20.38,-20.07,-20.13,-20.59,-21.14,-20.67,-20.08,-20.29,-16.88,-16.63,-17.24,-20.12,-20.71,-22.62,-25.95,-25.15,-22.02,-20.45,-21.47,-19.45,-18.33,-17.53,-15.79,-16.4,-18.05,-19.81,-23.02,-22.58,-23.8,-24.69,-22.41,-23.41,-22.87,-22.89,-21.69,-22.16,-19.27,-19.44,-18.92,-18.97,-20.79,-22.85,-25.03,-23.8,-25.02,-24.92,-22.78,-21.3,-16.77,-17.98,-15.82,-19.78,-20.55,-26.55,-22.63,-26.47,-28.25,-27.07,-27.57,-24.59,-22.44,-22.17,-21.21,-20.2,-20.58,-22.15,-20.39,-20.74,-18.81,-20.57,-22.92,-22.91,-25.93,-24.5,-24.16,-21.43,-22.45,-15.54,-22.63,-21.25,-22.56,-23.9,-24.15,-27.46,-27.03,-25.36,-23.42,-22.49,-19.79,-19.93,-19.66,-21.53,-19.34,-20.24,-21.9,-21.95,-22.74,-22.06,-19.92,-23.65,-21.93,-23.56,-19.53,-15.54,-15.18,-24.02,-25.41,-30.33,-27.37,-23.56,-22.02,-18.48,-17.48,-17.97,-21.38,-22.59,-15.21,-15.56,-18.83,-20.28,-21.66,-23.06,-22.97,-21.33,-21,-21.79,-19.96,-15.86,-13.99,-10.58,-12.92,-20.48,-26.77,-29.11,-27.08,-21.41,-19.56,-23.26,-26.05,-26.25,-23.75,-18.23,-15.69,-15.28,-13.37,-16.46,-17.78,-19.95,-22.3,-22.06,-24.05,-22.55,-23.35,-26,-26.11,-23.86,-23.16,-23.77,-26.62,-28.58,-26.59,-27.3,-24.47,-22.08,-23.1,-26.84,-27.35,-25.39,-24.46,-25.13,-24.36,-24.13,-24.56,-25.66,-27.24,-26.56,-24.51,-26.4,-25.24,-26.71,-28.22,-29.61,-28.38,-26.33,-24.2,-24.08,-23.35,-24.58,-26.03,-27.04,-26.32,-25.39,-25.02,-24.3,-24.25,-26.55,-24.44,-25.16,-24.14,-24.97,-26.5,-25.51,-24.95,-23.37,-22.78,-19.26,-23.2,-22.54,-24.35,-21.33,-21.49,-21.9,-23.99,-23.69,-23.68,-24.44,-24.77,-26.23,-26.04,-24.25,-24.06,-18.66,-16.74,-18.05,-17.4,-19.05,-20.17,-21.03,-23.26,-23.64,-25.97,-24.86,-23.62,-22.4,-18.81,-15.14,-16.84,-17.98,-22.56,-21.55,-24.19,-22.82,-27.19,-24.76,-23.13,-21};
//2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
//float SITL_accelx[] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00,0.00,27.689999999999998 , 27.687663742507695 , 27.680436600544468 , 27.666950165562305 , 27.646997524067828 , 27.622167234004642 , 27.591099544725253 , 27.552332366007846 , 27.508410101709423 , 27.459500891240147 , 27.40279449511023 , 27.340661701443942 , 27.27293300093627 , 27.199399630728074 , 27.124301946627398 , 27.039678621202157 , 26.957217792512175 , 26.862473308649342 , 26.76466762770587 , 26.658726248104685 , 26.552635999423558 , 26.435145897187702 , 26.313561220712323 , 26.185660157735278 , 26.06030860962329 , 25.938948512712457 , 25.799077976581067 , 25.64650473628751 , 25.500654329142996 , 25.345965512791857 , 25.191487988987227 , 25.030522797264886 , 24.86560329461917 , 24.70027957747866 , 24.524145092539918 , 24.343894702458286 , 24.162563091291133 , 23.992854750472162 , 23.80242010837469 , 23.621855411675718 , 23.432571572157187 , 23.26273506449097 , 23.06575926379466 , 22.860756839142724 , 22.658171543287047 , 22.449006419791274 , 22.238416522274377 , 22.0286135578407 , 21.822055678752186 , 21.620693005360756 , 21.4103901270178 , 21.192552422126838 , 21.001001461174795 , 20.789675321530687 , 20.573313262717974 , 25.679937998654772 , 25.359035027015068 , 25.036039280376436 , 24.69465480294135 , 24.362538532101766 , 24.024880068773335 , 23.69153421596475 , 23.396612454904336 , 23.099327101506745 , 22.80637119697107 , 22.478625368327492 , 22.142475124054428 , 21.803136332322694 , 21.470362972464862 , 21.13610218411712 , 20.78209824191609 , 20.443635722535383 , 20.12555751688597 , 19.803583453216028 , 19.478413068477053 , 19.145356280409963 , 18.86135081686946 , 18.53378524439575 , 18.20965373329433 , 17.894407317701315 , 17.576120440238952 , 17.275652763604178 , 16.984822666777845 , 16.689481069088686 , 16.388231838325574 , 16.08657239387413 , 15.792705973531708 , 15.49265727730752 , 15.197028699130742 , 14.90887574491274 , 14.629640253059451 , 14.345589100638614 , 14.067264726793274 , 13.825238336351818 , 13.54591966570761 , 13.278163866211885 , 13.026396402825144 , 12.769513124251601 , 12.505515397303723 , 12.24982557621673 , 12.000814819023892 , 11.760189786818318 , 11.51257189087231 , 11.292734635693177 , 11.059013842157599 , 10.839408005686364 , 10.611982041054157 , 10.385347542635062 , 10.161099680829969 , 9.95810538576133 , 9.740954472925198 , 9.532751336579205 , 9.332520221395265 , 9.130284963738154 , 8.926506345959863 , 8.734218318248898 , 8.548232122185597 , 8.362343459576314 , -35.9362526469725 , -35.140997583747264 , -34.47065254617214 , -33.7215484715975 , -33.03563328985307 , -32.38690619263042 , -31.772992252415264 , -31.167026260455415 , -30.544515466656897 , -29.948526534009105 , -29.372530210619765 , -28.801139661194348 , -28.267448911256245 , -27.74296157797277 , -27.23434865591009 , -26.796365414774257 , -26.326693936350416 , -25.866424038044862 , -25.414317018927715 , -25.013451624864132 , -24.587324328776667 , -24.21283425787815 , -23.816915284214225 , -23.42349209078776 , -23.05887220811677 , -22.698175667359955 , -22.39276785867939 , -22.049085081191663 , -21.74696968854912 , -21.44099095450628 , -21.12631924526069 , -20.834674413138398 , -20.538385842670365 , -20.24743332277113 , -19.999025161065617 , -19.71714722677381 , -19.457615469393403 , -19.22087583710337 , -18.959528467058668 , -18.705984170393045 , -18.463748551826434 , -18.224140757438278 , -17.996718382394665 , -17.774909163811337 , -17.56145014802717 , -17.354981318315726 , -17.144622989929417 , -16.946741783434177 , -16.76416614989913 , -16.595393785355533 , -16.41027720829789 , -16.224910624083606 , -16.049415914835123 , -15.872967464725312 , -15.702911395293995 , -15.54362492760556 , -15.382658387515995 , -15.221555301752502 , -15.070969051666289 , -14.926871988755547 , -14.784314912870371 , -14.63840992069088 , -14.49861235842458 , -14.365176549678676 , -14.231977677843076 , -14.0991373088719 , -13.972851087320432 , -13.852420220023031 , -13.733202327132272 , -13.612991816191577 , -13.510730727815154 , -13.400114427540835 , -13.291861235933226 , -13.187661896823196 , -13.08901902752337 , -12.988158172960043 , -12.900171886213187 , -12.803732202151298 , -12.710533706241588 , -12.628759513204411 , -12.536332105491773 , -12.448656993481926 , -12.365774348732263 , -12.28584666064549 , -12.206794952401898 , -12.128933725426707 , -12.052738473215923 , -11.97757060531627 , -11.901503546079779 , -11.826587630318393 , -11.757395662118325 , -11.68619372500736 , -11.626010793180203 , -11.561992229341675 , -11.496317834141946 , -11.43340662552701 , -11.371014465720855 , -11.314471435598529 , -11.251783247060766 , -11.19844879247103 , -11.141388500376289 , -11.08629456372628 , -11.034780981844598 , -10.982497694775661 , -10.931078865729955 , -10.880820856461696 , -10.838882055193038 , -10.791968378944889 , -10.74575418173026 , -10.701378260694694 , -10.658266316516395 , -10.616397143550426 , -10.574662597676431 , -10.533831888859085 , -10.49795964272874 , -10.461575334594615 , -10.42516734715516 , -10.389880980582983 , -10.356612216534716 , -10.324505233840764 , -10.292718000494158 , -10.262457299322847 , -10.233453693383572 , -10.2048134763973 , -10.17762736100912 , -10.150834697353734 , -10.126513955632117 , -10.10254565634123 , -10.080830866094345 , -10.058481363874096 , -10.038829203673172 , -10.017746073500964 , -9.998230664341987 , -9.9802067351509 , -9.963112379202553 , -9.94647594197641 , -9.931433909394979 , -9.917203129173588 , -9.903544642651006 , -9.89051974703076 , -9.878801434230564 , -9.86834223197219 , -9.858569296499452 , -9.85016918634031 , -9.841868009701258 , -9.83497271490933 , -9.82869577071432 , -9.823482575637533 , -9.819168263828635 , -9.81546894213773 , -9.812734953414116 , -9.810953258392317 , -9.810090424324097 , -9.810130975237414 , -9.811096096088153 , -9.812915763534702 , -9.815252595000477 , -9.818696314317979 , -9.82308110020063 , -9.828483502240665 , -9.83474728605911 , -9.841803697003344 , -9.849884080663534 , -9.859070472952217 , -9.868905277676912 , -9.879809978334155 , -9.891439018558486 , -9.904070255516931 , -9.917810518883094 , -9.932794176418131 , -9.948158193576363 , -9.964674615816788 , -9.982238104926878 , -10.000483230876483 , -10.020097269206882 , -10.03961758899004 , -10.05992015733457 , -10.081906990154248 , -10.105240708432953 , -10.129710399392165};


int i = 1;
int a = -1;
int f = 0;

/////////DATALOGGING///////////////////
#include <SD.h>
File dataFile;  //set data fi\le for micro sd card
float chipSelect = 4;
//////////////////STATE MACHINE/////////////////////////
float recalibratecounter = 0;  // a counter that is used to tell when to recalibrate the sensors
float systemstate = -1;        // a system state variable to switch from pad idle to launch
int errorboi = 0;              //set this variable high if errors are detected


/////////////////////FUNCTION PROTOTYPES////////////////////////////////////
float DATALOG();
float alt_update();
float SITLread_IMU();
float SITLread_baro();
float error_check_read_IMU();  //both read IMU and error checking features in one function. logic is inside the function
float read_IMU();
float read_baro();
float find_recalibrate();
float Estimate_state();
float error_check();
float recalibrate_sensor();
float pad_print();  // data to print on the pad
float get_offsets();
float advance_state();
//float LQR_control();
float caculate_angles();
float parachute_deploy();
float chute_deploy();
int speedAtan2();


void setup() {
  Serial.begin(115200);  // start serial monitor
  ////////////////////START SENSORS//////////////////////////////////
  pinMode(3, OUTPUT);

  SD.begin(chipSelect);  // start the SD card
Wire.setClock(400000);

  if (!lsm6ds33.begin_I2C()) {
    // if (!lsm6ds33.begin_SPI(LSM_CS)) {
    // if (!lsm6ds33.begin_SPI(LSM_CS, LSM_SCK, LSM_MISO, LSM_MOSI)) {
    Serial.println("Failed to find LSM6DS33 chip");
  }

  lsm6ds33.configInt1(false, false, true);  // accelerometer DRDY on INT1
  lsm6ds33.configInt2(false, true, false);  // gyro DRDY o

 // recalibrate_sensor();


  ///////////LED TEST///////////////////
/*
  pinMode(8, OUTPUT);
  digitalWrite(8, HIGH);
  delay(500);
  digitalWrite(8, LOW);
  delay(500);
  digitalWrite(8, HIGH);
  delay(500);
  digitalWrite(8, LOW);
*/
  /////////DRAG BRAKES//////////////////

  pitch_servo.attach(7);
  roll_servo.attach(5);  // Attaches the servo on pin 6 to the
  pitch_servo.write(90);
 roll_servo.write(80);
  delay(500);

  Serial.println(" Sensor startup complete, starting main loop ");
  dataFile.println(" Sensor startup complete, starting main loop ");
}

void loop() {

  ///////////////////////////STATE MACHINE////////////////////////////////////


  if (systemstate == -1) {
    Serial.print(" systemstate: Pad Idle ");
    dataFile.print(" systemstate: Pad Idle ");
    error_check_read_IMU();
  //  SITLread_IMU();
   // find_recalibrate ();
   // recalibrate_sensor();
   // read_baro();
   get_offsets();
    DATALOG();
    Estimate_state();
  }

  if (systemstate == 0) {
    Serial.print(" systemstate: Powered Flight ");
   dataFile.print(" systemstate: Powered Flight ");
  // find_recalibrate();
   // recalibrate_sensor();
    Estimate_state();
  //  alt_update();
    read_baro();
  //  SITLread_IMU();
   error_check_read_IMU();
    DATALOG();
    //LQR_control();
  
    caculate_angles();
  }

  if (systemstate == 1) {
    Serial.print(" systemstate: Burnout ");
    dataFile.print(" systemstate: Burnout ");
    Estimate_state();
    parachute_deploy();
    read_baro();
    DATALOG();
   // apogee_action();
   error_check_read_IMU();
  // SITLread_IMU();
  }




  ///////////////////////STATE ADVANCE/EXIT CONDITIONS/////////////////////////////////


  //apogee is called 7 seconds after liftoff
  /*
  if (time_actual > 30 && systemstate < 1) {
    systemstate = systemstate + 1;
  }
  */

//delay(39);
  // check the accelerometer to see if we have launched
  if (Time/1000 > 25 && systemstate < 0) {
    advance_state();
  }
  
  /////////////////////IF STATEMENTS//////////////////////////////////////////


  //Print out what data values are
  if(Time/1000 < 0.3) {
   pad_print();    
  }


 if (systemstate < 0) {
    //delay(100);
    time_offset = millis();
  }

  if (errorboi > 0) {
   // Servo1.write(95);
   // Servo2.write(90);
    digitalWrite(8, HIGH);
  } else {
   // Servo1.write(5);
   // Servo2.write(180);
    digitalWrite(8, LOW);
  }

  //////////////////////////TIME KEEPER//////////////////////////////////////////
  time_old = Time;
  Time = millis();
  time_new = Time;
  time_actual = Time / 1000 - time_offset / 1000;
  Time_step = time_old - time_new;
}




float advance_state() {
  systemstate = systemstate + 1;
}


float apogee_action() {
  //Serial.print(" apogee ");
  //dataFile.print(" apogee ");
  apogee = 1;
}


/* okay so this is really fucking stupid. whenver read_IMU is called outside the error check function
the readings will be erratic. As a result I will have to figure out how to split the error check functions into two 
parts that I can call seperatly
*/
float error_check_read_IMU() {
  if(systemstate  > -2) {
 read_IMU();
  }
/*
    if(systemstate > -1 && Time/1000 < 100) {
    errorboi = 1;
    Serial.print("premature launch");
    dataFile.print("premature launch");

  }
  */
  if(Time/1000 < 100) {
  //Serial.print( " error checking ");
  if (accelx < -3 && Time / 1000 < 40) {
    Serial.print(" rocket is not vertical ");
    dataFile.print(" rocket is not vertical ");

    errorboi = 1;
  }
  /*
 if (!SD.begin(4) && systemstate == -1) {
      errorboi = 1;
    dataFile.print(" SD card not avaliable! ");
    Serial.print(" SD card not avaliable! ");
   }
   */

  if (accelx == 0 && systemstate == -1 && Time/1000 < 100) {
    errorboi = 1;
    dataFile.print(" accelerometer not connected ");
    Serial.print(" accelerometer not connected ");

  }
  
  }

}




